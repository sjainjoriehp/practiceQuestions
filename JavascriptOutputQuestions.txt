 isNaN(true) //false

isNaN(false) //false

isNaN(undefined)// true
 
 console.log("1"+ 2 + 2) // 122 

 console.log(1 + 2 + "2") //32

 console.log("2" > 1) // true

 //console.log(7+9 +"23") //1623
 
 //console.log(2 + '2' - '2');   // 20

//console.log(null > 0)   //false

  console.log(null < 0)   //false

 console.log(null == 0)     //false

 console.log(null >= 0)      //true

 console.log(typeOf null)  // Object
 
 // console.log(2 - '2' - '2');   //-2
 
 //console.log(1, 'Hello' - 'Hello'); // 1 NaN
 
 console.log(1 - 'Hello' + 'Hello'); // NaNHello
 //=====*************************************************================================================================================================

      if(function(){return false;})
      
      {
      
      console.log('Inside if statement');
      
      }else{
      
      console.log('Inside else statement');
      
      }

     output
     -----------------------------------
           Inside if statement

 //=====*************************************************================================================================================================


           function foo() {
 
            let a = b = 0;
            
            a++;
            
            return a;
            
            }
            
            foo();
            
            console.log(typeof a);
            
            console.log(typeof b);

            output
            ------------------------------------------
            undefined
            Number
  
 //=====*************************************************================================================================================================          




//=====*************************************************================================================================================================
1.
let a=[]
let b=[]

console.log(a==b)
consolfe.log(a===b)

output
-------------------------
false
false

//=====*************************************************================================================================================================

2.
let a=[]
let b=a
console.log(a==b)
console.log(a===b)

output
-------------------
true
true
=====*************************************************================================================================================================

3.
let a=[20]
let b=[20]

console.log(a[0]==b[0])
console.log(a[0]===b[0])

output
----------------------
true
true
 

=====*************************************************================================================================================================

4.
let z=[1,2,3,4]
let a={name:"anil"}
console.log(...z)

output
-----------------
1,2,3,4

=====*************************************************================================================================================================

5.
 console.log(typeof NaN)

output
----------------------------
Number

=====*************************************************================================================================================================

6.
  let data=10 - - 10
   console.log(data)

 output
-------------------
20

=====*************************************************================================================================================================

7.
   const set=new Set([1,1,2,3,4])
   console.log(set)

 output
-----------------------------------------------
{1,2,3,4}

=====*************************************************================================================================================================

8.
   let data={name:"Anil"}
console.log(delete data.name)

output
----------------------------
true
data={}

=====*************************************************================================================================================================

8.
   
 let data={name:"Anil"}
console.log(delete data)

output
----------------------------
false
data={name:"Anil"}


=====*************************************************================================================================================================

9.
let data=["Peter","anil","sam"]
let [y]=data
console.log(y)


output
------------------------------
Peter

=====*************************************************================================================================================================

10.

  const data=["Peter","anil","sam"]
    const[,z]=data
   console.log(z)

output
---------------------------------------
sam

=====*************************************************================================================================================================

11.
//how to get name property without . operator
const data={name:"anil",age:29,skill:"JS"}

output
--------------------------------------
 let{name}=data 

=====*************************************************================================================================================================

12.

//merge both the arrays
let data={name:"anil",age:29,skill:"JS"}
let info={city:"Noida",mail:"anil@test.com"}

console.log({...data,...info})

=====*************************************************================================================================================================

13.
   let data={name:"anil",age:29,skill:"JS"}
   let info={city:"Noida",mail:"anil@test.com"}
   
     data={data,...info}

  output
----------------------
{
  data: { name: 'anil', age: 29, skill: 'JS' },
  city: 'Noida',
  mail: 'anil@test.com'
}

=====*************************************************================================================================================================
14.
      
    let data={name:"anil",age:29,skill:"JS"}
   let info={city:"Noida",mail:"anil@test.com"}
   
     data={...data,...info}
console.log(data)

output
-----------------------------------------------

{
  name: 'anil',
  age: 29,
  skill: 'JS',
  city: 'Noida',
  mail: 'anil@test.com'
}

=====*************************************************================================================================================================
15.
  
    const name="Anil"
console.log(name())

 output
---------------------------------
error can not a function

=====*************************************************================================================================================================

16.
  
 const result= false || {} || null
console.log(result)


output
---------------------------------
{}

=====*************************************************================================================================================================

17.
    let data=null || false || ''
   console.log(data)

output
---------------------------------------
blank

=====*************************************************================================================================================================

18.

   const result=[] || 0 || true

output
-------------------------
[]

=====*************************************************================================================================================================

19.

 console.log(Promise.resolve(5))

output
-------------------------
promise fulfilled

=====*************************************************================================================================================================
20.

  console.log("emoji"==="emoji" )

output
-----------------------------
true

=====*************************************************================================================================================================

21.

JSON.parse()

this methid will convert json into a js value.

=====*************************************************================================================================================================

22.
  let name="sidhu"

function getName(){
  console.log(name)
  let name="anil"
}

getName()

output
---------------------------------------
error: can not access value before initialization


=====*************************************************================================================================================================
23.

   let name="anil"
    
  function getName()
{
   console.log(name)
}

getName()

output
-----------------------------
anil

=====*************************************************================================================================================================

24.

 console.log(`$(x=>x)('India')} to program`)

output
---------------------------------------
India to program

=====*************************************************================================================================================================

25.
//choose correct way to pass a value in a function
    function sumValues(x,y,z){
     return x+y+z;
}


output
---------------------------------------------------
sumValues(...[1,2,3])

=====*************************************************================================================================================================

26.

  Note:--In JS code excutes left to right

    const  name="code step "
      console.log(!typeof name==='object')
      console.log(!typeof name==="string")


output
----------------------------------------------------

false

=====*************************************************================================================================================================
27.

    const name="subscribe"
    const age=29

  console.log(isNaN(name))
  console.log(isNaN(age))

output
----------------------------------------
true
false

=====*************************************************================================================================================================

28.

 //what can modify person object
     let person={name:"Anil"}
    Object.seal(person)

      console.log(person)

output
--------------------------------------
with seal u can modify the object by can not add new properties to it.
In Object.freeze() we can't add new property nor can modify existing property.

=====*************************************************================================================================================================

29.
      //remove first element
     let data=[2,9,0,10]
     
   console.log(data.shift())

=====*************************************************================================================================================================

30.
       // remove last element from array
  
      let arr=[1,2,3,4]
      
      console.log(arr.pop())  
      
=====*************************************************================================================================================================

31.

      // check number is even or  not
    console.log(num%2==0)

=====*************************************************================================================================================================

32.
          // what this will do
         console.log(num%2)
output
----------------------------------------
it will devide that num and gives the remainder
=====*************************************************================================================================================================

33.
     // convert geven value into Boolean false
             let data="true"
           console.log(!typeof data)


=====*************************************************================================================================================================
34.

// convert this into true
     let data=true
    console.log(!!true)
          
=====*************************************************================================================================================================

35.

    // diff in map and forEach
map will return new array and where forEach will iterate over an array

=====*************************************************================================================================================================

36.
     let data=["a","p","b"]
delete data[1]

  console.log(data)

output
-------------------------------------
["a",empty,"b"]
=====*************************************************===============================================================================

36.
     let data=["1","2","2"]
     delete data[1]
     console.log(data.length)

     output
     ---------------------------
     3
=====*************************************************===============================================================================
37.

     //mertge two arrays 
      let arr1=[12,3,4]
      let arr2=[5,6,7]

    console.log([...arr1,...arr2])
=====*************************************************===============================================================================
38.
    let a=[1,2,3]
    let b=[4,3,5]
    console.log([...a,...b])
  // it will console both the duplicate value

=====*************************************************===============================================================================
39.
     let data=3**3

     output
     -----------------
     27
=====*************************************************===============================================================================
40.

     let a=2
     setTimeout(()=>{
      console.log(a)
     })

     a=100
output
-------------------------
100

            let a=2
            let A=20
            console.log(A)// 20

=====*************************************************===============================================================================

41.

     let A10="Like"
     console.log(A10)// Like
  
     let 10A="afdas"
     console.log(10A) // SyntaxError: Invalid or unexpected token
=====*************************************************===============================================================================

42.
          let a="like"
          let b='like'

          cosnole.log(a==b) // true

=====*************************************************===============================================================================

43.

  let a=1
  let c=2
  console.log(--c === a) // true
=====*************************************************===============================================================================

44.
      let a=1
      let b=1
      let c=2
      console.log(a==b=== --c)  /// false
    
=====*************************************************===============================================================================
45.

   console.log(3*3) // 9
   console.log(3**3) //27
   console.log(3***3) // error

=====*************************************************===============================================================================
46.
              console.log(a)  // undefined 
                 var a
=====*************************************************===============================================================================
47.
            console.log(a)   // error
=====*************************************************===============================================================================

48.

        console.log([[[[]]]])  // nested array   Array(3)

=====*************************************************===============================================================================
47

       //// How to get name of the OS
       navigator.platform
=====*************************************************===============================================================================

48.
       let for=100

       // this will give an error ad for is a reserver keyword
  
=====*************************************************===============================================================================

49.
       function fruit(){
        console.log(name)
        console.log(price)
        
         var name="apple"
         let price="20"
        }

           fruit()
    
    output
    -----------------------
     undefined
     error
   
=====*************************************************===============================================================================
50.
    
     for(var i=0;i<3;i++)
     {
       setTimeout(()=>console.log(i),1)
     }

     output
     --------------------------
     3
     3
     3
=====*************************************************==============================================================================
51.

     for(let i=0;i<3;i++)
     {
       setTimeout(()=>console.log(i),1)
     }

     output
     --------------------------
     0
     1
     2
=====*************************************************==============================================================================
53.

        
       console.log(+true)
      console.log(typeof +true)

       output
       --------------------
       1
       number
=====*************************************************==============================================================================
55.
                 console.log(!"anil")
                 console.log(typeof("anil"))
       
       output
       -----------------------------------
          false
          string

=====*************************************************===============================================================================
56.
         let data="size"
         const bird={
          size:"small"
         }
         console.log(bird[data])
          console.log(bird["size"])
             console.log(bird.size)
              console.log(bird.data)

              output
              ----------------------------
               small
               small
               small
               undefined
======*************************************************==============================================================================
57.
         
         let c={name:"ppp"}
         let d
         d=c
         c.name="oooo"
         console./log(d) // oooo
======*************************************************==============================================================================
58.

       var x;
       var x=10

       console.log(x) // 10
======*************************************************==============================================================================
59.
          var x
          let x=10
        console.log(x) // Invalid or unexpected token
======*************************************************==============================================================================
60.

     let a=3
     let b= new Number(3)

     console.log(a==b)   // true
     console.log(a===b)    // false

======*************************************************==============================================================================

61.
         let name;
         nmae={}
         console.log( nmae)    // object
          
======*************************************************==============================================================================
62.
           
          function fruit(){
            console.log("Woof!")
          }

          fruit.name="apple"

          fruit()

          output
          ----------------------------
         no error
======*************************************************==============================================================================
63.
     function sum(a,b){
      return a+b
     }
      console.log(1,"2") // 12
======*************************************************==============================================================================
64.
        let number=0
        console.log(number++)      // 0
        console.log(++number)      //2
        console.log(number)           //2
======*************************************************==============================================================================
65.
     function getAge(...args)
     {
        console.log(typeof args)          // object
     }
         
======*************************************************==============================================================================
66.
      function getAge(){
          age=21
          console.log(age)

      }

      getAge() // 21

      // only gives an error if we use "use strict"
======*************************************************==============================================================================
67.
          const sum=eval('10*10+5')
          console.log(sum)   // 105
======*************************************************==============================================================================
69.
             const obj={1:"a",2:"b",3:"c"}

             console.log(obj.hasOwnProperty("1"))
             console.log(obj.hasOwnProperty(1)) 

             //output
              true
              true
======*************************************************==============================================================================
70.
       let obj={a:"hello" , b:"dsfajhi",a:"dsaf"}
       console.log(obj)

       output
       ---------------------
{ a: 'dsaf', b: 'dsfajhi' }
======*************************************************==============================================================================

71.
            for(let i=0;i<5;i++)
            {
              if(i===3) continue;
              console.log(i)

            }
     
          output
          ----------------------------
          1
          2
          4
          
======*************************************************==============================================================================
72.
       const foo=()=>{ console.log("first")}
       const bar=()=> setTimeout(()=>{console.log("second")})
       const baz=()=>{console.log("third")}

       bar()
       foo()
       baz()

       output
       --------------------------------------------
       first
       third 
       second
======*************************************************==============================================================================
74.

          const person={name:"anil"}
          
          function sayHii(age){
                return `${this.name} is ${age}`
          }

          console.log(sayHii.call(person,21))   // anil is 21
          console.log(sayHii.bind(person,21))    // function

======*************************************************==============================================================================

75.
       function sayHii(){
         return (()=> 0)();
       }
      console.log(typeof sayHii()) // Number

======*************************************************==============================================================================
77.

           console.log(typeof typeof 1)  // string

======*************************************************==============================================================================
78,.
         
      let number=[1,2,3]
      number[6]=11
      console.log(number)  // [1,2,3,empty,empty,empty,11]

======*************************************************==============================================================================
79.
            const number=[1,2,3]
            number[9]=number
            console.log(number)  

            output
            --------------------------------------
           it will be a infinite array where each 9th position has the number array.
            [1,2,3,empty,empty,empty,empty,empty,empty,[1,2,3]]

======*************************************************==============================================================================
80. Everthing in javascript is either a  number or object.
======*************************************************==============================================================================

81.
     console.log(!!null) //   false
     console.log(!!"")   //    false
     console.log(!!1)    //  true
======*************************************************==============================================================================

82.
       console.log(setInterval(()=>{console.log("Hi")}),1000)
       console.log(setInterval(()=>{console.log("Hi")}),1000)
       console.log(setInterval(()=>{console.log("Hi")}),1000)
        
            output
            -----------------
            return different-different ID's(like 1,2,3)

======*************************************************==============================================================================
83.
       console.log([..."anil"]) // [ 'a', 'n', 'i', 'l' ]
       
======*************************************************==============================================================================

84.
       const firstPromise=new Promise((res,rej)=>{
        setTimeout(res,500,"one")
       })

 const secondPromise=new Promise((res,rej)=>{
        setTimeout(res,100,"two")
       })

   promise.race([firstPromise,secondPromise]).then(res=>{console.log(res)})
 
  output
  --------------------------------------------
  two
=====*************************************************===============================================================================
85.
     let person={name:"Peter"}
     const member=[person]
     person=null
     console.log(member)
     
     output
     ------------------------------------------
[ { name: 'Peter' } ]
=====*************************************************===============================================================================

86.
    
     const person={
      name:"batman",
      age;21
     }

     for(const item in person )
     {
        console.log(item)
     }
    
  output
  --------------------------------------------------------------------
  name
  age
=====*************************************************===============================================================================

87.
        let data=3 + 4 + '5'
        console.log(typeof data) // string
=====*************************************************===============================================================================

88.
      

             console.log(typeof 3 + 4 + '5')  // Number 45
=====*************************************************===============================================================================
89.

           console.log(3 + 4 + + '5' )   // 12
=====*************************************************===============================================================================

90.

            console.log([]==[]) // false
=====*************************************************===============================================================================
91.
           let data=[1,2,3].map(num=>{
            if(typeof num === "number") return
            return num*2
           })

         cosnole.log (data)  /////  [ undefined, undefined, undefined ]
=====*************************************************===============================================================================
92.                 
      function getInfo(member){
                member.name="anil"
                
      }
     
      const person={name:"sarah"}
      getInfo(person)
      console.log(person)
 
       output
       ------------------------------------
       { name: 'anil' }
=====*************************************************===============================================================================
93.

      function Car(){
        this.make="tata"
        return {make:"kia"}
      }

      const myCar=new Car()
      console.log(myCar.make) // kia

-----------------------------------------------------------------------------
 function Car(){
        this.make="tata"
        {make:"kia"}
      }

      const myCar=new Car()
      console.log(myCar.make) // tata





=====*************************************************===============================================================================

 94.

   (()=>{
      let x= (y=10)
   }) ();

   console.log(typeof x)  // undefined
  
=====*************************************************===============================================================================
 
95.
        (()=>{
      let x= y=10
        }) ();

       console.log(typeof y)  // Number

=====*************************************************===============================================================================

96.
      
        (()=>{
            let x=10
        }) ();
        
         (()=>{
            let x=10
        }) ();
       
        console.log(typeof x) // undefined

=====*************************************************===============================================================================
97.
           (()=>{
      let x= y=10
        }) ();

       (()=>{
      let x= y=20
        }) ();

       console.log(typeof y, y) // Number ,  20
     
=====*************************************************===============================================================================
98.
           let x=100
           (()=>{
            var x=20
           })()

           console.log(x) //100

=====*************************************************==============================================================================

99.

      console.log(!true - true)  // -1

=====*************************************************==============================================================================

100.

        console.log(true ++ "10")  // 11



=====*************************************************===============================================================================
=====*************************************************===============================================================================

function foo(){
    let a=b=0;
    
    return a;
}

foo()

console.log(typeof a)
console.log(typeof b)

output
------------------------------
undefined
number
